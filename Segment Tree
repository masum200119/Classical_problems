#include<bits/stdc++.h>
using namespace std;

#define Palmist_Masum ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)

const int MAXN=1e6+1;
const int dj=1e9+7;
const int inf=1e16;
void depression()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
}
int arr[MAXN],seg[4*MAXN];
void build(int root,int lo,int hi)
{
    if(lo==hi)
    {
        seg[root]=arr[lo];
        return;
    }
    int mid=(lo+hi)/2;
    build(2*root +1,lo,mid);
    build(2*root +2,mid+1,hi);
    seg[root]=min(seg[2*root +1],seg[2*root +2]);


}
int Query(int root,int lo,int hi,int l,int r)
{
    if(lo>=l and hi<=r)
    {
        return seg[root];
    }
    if(l>hi or r<lo)
    {
        return INT_MAX;
    }
    int mid=(lo+hi)/2;
    int left=Query(2*root +1,lo,mid,l,r);
    int right=Query(2*root +2,mid+1,hi,l,r);
    return min(left,right);
}
void Chaos()
{
    int n;
    cin>>n;
    for (int i = 0; i < n; ++i)
    {
        cin>>arr[i];
    }
    build(0,0,n-1);
    int q;
    cin>>q;
    while(q--)
    {
        int l,r;
        cin>>l>>r;
        cout<<Query(0,0,n-1,l,r)<<endl;
    }
}
signed main()
{
    depression();
    Palmist_Masum;
    int __;
    cin>>__;
    for(int i=1; __--;i++)
    {
       // cout<<"Case "<<i<<": ";
        
        Chaos();
    }
     // Chaos();
    return 0;
}
