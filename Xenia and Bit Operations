#include<bits/stdc++.h>
using namespace std;
#define all(x) x.begin(),x.end()
// #define sort(a) sort(a.begin(),a.end())
// #define rsort(a) sort(a.rbegin(),a.rend())
// #define unq(x) x.erase(unique(all(x)),x.end());
#define int long long
#define ll long long
#define endl "\n"
#define Endl "\n"
#define hae cout<<"Yes"<<endl;
#define nah cout<<"No"<<endl;
#define Palmist_Masum ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define pb push_back
#define pp pop_back
#define vtr vector<int>
#define vpr vector<pair<int,int>>
#define sz size()
#define print(x) cout<<x<<Endl;
#define ff first
#define ss second
#define fncc (aux valid =[&] (int x) -> bool { };)
#define printarray(a) for(int i=0;i<a.sz;i++)cout<<a[i]<<' ';cout<<endl;
/*vecxr<bitset<31>> v(n);
bitset<31>kk(arr[i]);
v[i]=kk;*/
const int MAXN=1e6+1;
const int dj=1e9+7;
const int inf=1e16;
void depression()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
}
int arr[MAXN],seg[4*MAXN];
void build(int root ,int lo ,int hi)
{
    if (lo==hi)
    {
        seg[root]=arr[lo];return;
    }
    int mid=(lo+hi)/2;
    build(2*root,lo,mid);
    build(2*root +1,mid+1,hi);
    int dd=log2(hi-lo+1);
    if(dd&1)
    {
        seg[root]= (seg[2*root] | seg[2*root +1]);

    }
    else
    {
        seg[root]= (seg[2*root] ^ seg[2*root +1]);
    }
}
void Update(int root,int lo,int hi,int ind,int val)
{
    if(ind<lo or ind>hi)
    {
        return;
    }
    if(lo==hi)
    {
        seg[root]=val;return;
    }
    int mid=(lo+hi)/2;
    Update(2*root,lo,mid,ind,val);
    Update(2*root+1,mid+1,hi,ind,val);
    int dd=log2(hi-lo+1);
    if(dd&1)
    {
        seg[root]= (seg[2*root] | seg[2*root +1]);

    }
    else
    {
        seg[root]= (seg[2*root] ^ seg[2*root +1]);
    }
}
void Chaos()
{
    int n,m;
    cin>>n>>m;
    n=pow(2,n);
    for (int i = 0; i < n ; ++i)
    {
        cin>>arr[i];
    }
    build(1,0,n-1);
    while(m--)
    {
        int p,v;
        cin>>p>>v;p--;
        Update(1,0,n-1,p,v);
        cout<<seg[1]<<Endl;
    }   
}
signed main()
{
    depression();
    Palmist_Masum;
    int __=1;
    // cin>>__;
    for(int i=1; __--;i++)
    {
       // cout<<"Case "<<i<<": ";
        
        Chaos();
    }
    return 0;
}
