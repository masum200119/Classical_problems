#include<bits/stdc++.h>
using namespace std;
#define all(x) x.begin(),x.end()
#define int long long
#define ll long long
#define endl "\n"
#define yes cout<<"Yes"<<endl;
#define no cout<<"No"<<endl;
#define Love_You_T ios::sync_with_stdio(false);cin.tie(0);cout.tie(0)
#define pb push_back
#define pp pop_back()
#define vtr vector<int>
#define sz size()
#define ff first
#define ss second
#define fncc (auto valid =[&] (int x) -> bool { };)
#define vout(a) for(auto x:a)cout<<x<<' ';
const int INF=1e9+1;
const int MAXN=1e6+1;
const int MOD=1e9+7;
const int nax=INT_MAX;
const int nin=INT_MIN;
void gs()
{
    #ifndef ONLINE_JUDGE
    freopen("input.txt","r",stdin);
    freopen("output.txt","w",stdout);
    #endif
}
int n,m;
const int N=1010;
char grid[N][N];
bool vis[N][N];
void flood_fill(int x,int y)
{
    vis[x][y]=true;;
    if(x-1>=1 and grid[x-1][y]!='#' and !vis[x-1][y])flood_fill(x-1,y);
    if(x+1<=n and grid[x+1][y]!='#' and !vis[x+1][y])flood_fill(x+1,y);
    if(y-1>=1 and grid[x][y-1]!='#' and !vis[x][y-1])flood_fill(x,y-1);
    if(y+1<=m and grid[x][y+1]!='#' and !vis[x][y+1])flood_fill(x,y+1);
 
 
}
void kgu()
{
    
    cin>>n>>m;
    for(int i=1;i<=n;++i)
    {
        for(int j=1;j<=m;++j)
        {
            cin>>grid[i][j];
        }
    }
    int cnt=0;
    for(int i=1;i<=n;++i)
    {
        for(int j=1;j<=m;++j)
        {
            if(grid[i][j]=='#')continue;
            if(vis[i][j])continue;
            flood_fill(i,j);
            ++cnt;
        }
    }
    cout<<cnt<<endl;
 
}
signed main()
{
    gs();
    gsc;
    // int __;
    // cin>>__;
    // for(; __--; )
    // {
    //     //cout<<"Case "<<i<<": ";
        kgu();
    // }
    return 0;
}
